
Elf Header
Elf magic: 7f E L F 1 1 1 0 0 0 0 0 0 0 0 0 
ELF_CLASS:                              ELFCLASS32
ELF_DATA:                               ELFDATA2LSB (Two's complement, little-endian)
ELF_VERSION:                            EV_CURRENT
ELF_OSABI:                              ELFOSABI_SYSV
Elf ABI Version:                        0
Elf type:                               EXEC (Executable file)
Machine:                                Intel 80386
Elf File Version:                       1 (Current)
Elf Program entry point:                0x8049080
Elf Program header Offset:              52 (raw offset bytes)
Elf Section header Offset:              14244 (raw offset bytes)
Elf processor flags:                    0
Elf header's size:                      52 (bytes)
Elf program header entry size:          32 (bytes)
Elf program header number of entries:   12
Elf section header's size:              40 (bytes)
Elf section header number of entries:   31
Elf section header string table index:  30

Elf Program Header:
TYPE            FLAGS            Offset            V.Addr
            P.Addr            F.Size            M.Size             Align

PHDR		R              0x0000000000000034 0x0000000008048034
	  0x0000000008048034 0x0000000000000180 0x0000000000000180 0x4

INTERP		R              0x00000000000001b4 0x00000000080481b4
	  0x00000000080481b4 0x0000000000000013 0x0000000000000013 0x1
	[Program Interpreter: /lib/ld-linux.so.2]

LOAD		R              0x0000000000000000 0x0000000008048000
	  0x0000000008048000 0x0000000000000324 0x0000000000000324 0x1000	(DATA)

LOAD		R X            0x0000000000001000 0x0000000008049000
	  0x0000000008049000 0x0000000000000274 0x0000000000000274 0x1000	(TEXT)

LOAD		R              0x0000000000002000 0x000000000804a000
	  0x000000000804a000 0x00000000000001b0 0x00000000000001b0 0x1000	(DATA)

LOAD		RW             0x0000000000002f0c 0x000000000804bf0c
	  0x000000000804bf0c 0x0000000000000110 0x0000000000000114 0x1000	(DATA)

DYNAMIC		RW             0x0000000000002f14 0x000000000804bf14
	  0x000000000804bf14 0x00000000000000e8 0x00000000000000e8 0x4

NOTE		R              0x00000000000001c8 0x00000000080481c8
	  0x00000000080481c8 0x0000000000000060 0x0000000000000060 0x4

GNU_PROPERTY	R              0x00000000000001ec 0x00000000080481ec
	  0x00000000080481ec 0x000000000000001c 0x000000000000001c 0x4

GNU_EH_FRAME	R              0x0000000000002024 0x000000000804a024
	  0x000000000804a024 0x0000000000000054 0x0000000000000054 0x4

GNU_STACK	RW             0x0000000000000000 0x0000000000000000
	  0x0000000000000000 0x0000000000000000 0x0000000000000000 0x10

GNU_RELRO	R              0x0000000000002f0c 0x000000000804bf0c
	  0x000000000804bf0c 0x00000000000000f4 0x00000000000000f4 0x1

Mapping from section to segment: 
SEGMENT: SECTIONS
      0: 
      1: .interp 
      2: .interp .note.gnu.build-id .note.gnu.property .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rel.dyn .rel.plt 
      3: .init .plt .plt.sec .text .fini 
      4: .rodata .eh_frame_hdr .eh_frame 
      5: .init_array .fini_array .dynamic .got .got.plt .data 
      6: .dynamic 
      7: .note.gnu.build-id .note.gnu.property .note.ABI-tag 
      8: .note.gnu.property 
      9: .eh_frame_hdr 
     10: 
     11: .init_array .fini_array .dynamic .got 

Elf Section header:
[ID]    NAME              TYPE             FLAGS           ADDRESS            OFFSET
            SIZE              LINK              INFO         ADDRALIGN           ENTSIZE

[00]                   NULL              ---------------- 0000000000000000 0000000000000000 
       0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 

[01] .interp           PROGBITS          A--------------- 00000000080481b4 00000000000001b4 
       0000000000000013 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[02] .note.gnu.build-  NOTE              A--------------- 00000000080481c8 00000000000001c8 
       0000000000000024 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[03] .note.gnu.proper  NOTE              A--------------- 00000000080481ec 00000000000001ec 
       000000000000001c 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[04] .note.ABI-tag     NOTE              A--------------- 0000000008048208 0000000000000208 
       0000000000000020 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[05] .gnu.hash         GNU_HASH          A--------------- 0000000008048228 0000000000000228 
       0000000000000020 0000000000000006 0000000000000000 0000000000000004 0000000000000004 

[06] .dynsym           DYNSYM            A--------------- 0000000008048248 0000000000000248 
       0000000000000050 0000000000000007 0000000000000001 0000000000000004 0000000000000010 

[07] .dynstr           STRTAB            A--------------- 0000000008048298 0000000000000298 
       000000000000004a 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[08] .gnu.version      VERSYM            A--------------- 00000000080482e2 00000000000002e2 
       000000000000000a 0000000000000006 0000000000000000 0000000000000002 0000000000000002 

[09] .gnu.version_r    VERNEED           A--------------- 00000000080482ec 00000000000002ec 
       0000000000000020 0000000000000007 0000000000000001 0000000000000004 0000000000000000 

[10] .rel.dyn          REL               A--------------- 000000000804830c 000000000000030c 
       0000000000000008 0000000000000006 0000000000000000 0000000000000004 0000000000000008 

[11] .rel.plt          REL               AI-------------- 0000000008048314 0000000000000314 
       0000000000000010 0000000000000006 0000000000000018 0000000000000004 0000000000000008 

[12] .init             PROGBITS          AX-------------- 0000000008049000 0000000000001000 
       0000000000000024 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[13] .plt              PROGBITS          AX-------------- 0000000008049030 0000000000001030 
       0000000000000030 0000000000000000 0000000000000000 0000000000000010 0000000000000004 

[14] .plt.sec          PROGBITS          AX-------------- 0000000008049060 0000000000001060 
       0000000000000020 0000000000000000 0000000000000000 0000000000000010 0000000000000010 

[15] .text             PROGBITS          AX-------------- 0000000008049080 0000000000001080 
       00000000000001d9 0000000000000000 0000000000000000 0000000000000010 0000000000000000 

[16] .fini             PROGBITS          AX-------------- 000000000804925c 000000000000125c 
       0000000000000018 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[17] .rodata           PROGBITS          A--------------- 000000000804a000 0000000000002000 
       0000000000000024 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[18] .eh_frame_hdr     PROGBITS          A--------------- 000000000804a024 0000000000002024 
       0000000000000054 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[19] .eh_frame         PROGBITS          A--------------- 000000000804a078 0000000000002078 
       0000000000000138 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[20] .init_array       INIT_ARRAY        WA-------------- 000000000804bf0c 0000000000002f0c 
       0000000000000004 0000000000000000 0000000000000000 0000000000000004 0000000000000004 

[21] .fini_array       FINI_ARRAY        WA-------------- 000000000804bf10 0000000000002f10 
       0000000000000004 0000000000000000 0000000000000000 0000000000000004 0000000000000004 

[22] .dynamic          DYNAMIC           WA-------------- 000000000804bf14 0000000000002f14 
       00000000000000e8 0000000000000007 0000000000000000 0000000000000004 0000000000000008 

[23] .got              PROGBITS          WA-------------- 000000000804bffc 0000000000002ffc 
       0000000000000004 0000000000000000 0000000000000000 0000000000000004 0000000000000004 

[24] .got.plt          PROGBITS          WA-------------- 000000000804c000 0000000000003000 
       0000000000000014 0000000000000000 0000000000000000 0000000000000004 0000000000000004 

[25] .data             PROGBITS          WA-------------- 000000000804c014 0000000000003014 
       0000000000000008 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[26] .bss              NOBITS            WA-------------- 000000000804c01c 000000000000301c 
       0000000000000004 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[27] .comment          PROGBITS          MS-------------- 0000000000000000 000000000000301c 
       000000000000002a 0000000000000000 0000000000000000 0000000000000001 0000000000000001 

[28] .symtab           SYMTAB            ---------------- 0000000000000000 0000000000003048 
       0000000000000430 000000000000001d 000000000000002d 0000000000000004 0000000000000010 

[29] .strtab           STRTAB            ---------------- 0000000000000000 0000000000003478 
       000000000000020e 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[30] .shstrtab         STRTAB            ---------------- 0000000000000000 0000000000003686 
       000000000000011d 0000000000000000 0000000000000000 0000000000000001 0000000000000000 


Elf symbol headers:
Found .dynsym section symbols with 5 symbols
   ID:      Value            Size        TYPE    UNION   VIS     Section NAME
    0: 0000000000000000 0000000000000000 NOTYPE  LOCAL   DEFAULT     UND 
    1: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND puts
    2: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND __gmon_start__
    3: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND __libc_start_main
    4: 000000000804a004 0000000000000004 OBJECT  GLOBAL  DEFAULT      17 _IO_stdin_used
Found .symtab section symbols with 67 symbols
   ID:      Value            Size        TYPE    UNION   VIS     Section NAME
    0: 0000000000000000 0000000000000000 NOTYPE  LOCAL   DEFAULT     UND 
    1: 00000000080481b4 0000000000000000 SECTION LOCAL   DEFAULT       1 
    2: 00000000080481c8 0000000000000000 SECTION LOCAL   DEFAULT       2 
    3: 00000000080481ec 0000000000000000 SECTION LOCAL   DEFAULT       3 
    4: 0000000008048208 0000000000000000 SECTION LOCAL   DEFAULT       4 
    5: 0000000008048228 0000000000000000 SECTION LOCAL   DEFAULT       5 
    6: 0000000008048248 0000000000000000 SECTION LOCAL   DEFAULT       6 
    7: 0000000008048298 0000000000000000 SECTION LOCAL   DEFAULT       7 
    8: 00000000080482e2 0000000000000000 SECTION LOCAL   DEFAULT       8 
    9: 00000000080482ec 0000000000000000 SECTION LOCAL   DEFAULT       9 
   10: 000000000804830c 0000000000000000 SECTION LOCAL   DEFAULT      10 
   11: 0000000008048314 0000000000000000 SECTION LOCAL   DEFAULT      11 
   12: 0000000008049000 0000000000000000 SECTION LOCAL   DEFAULT      12 
   13: 0000000008049030 0000000000000000 SECTION LOCAL   DEFAULT      13 
   14: 0000000008049060 0000000000000000 SECTION LOCAL   DEFAULT      14 
   15: 0000000008049080 0000000000000000 SECTION LOCAL   DEFAULT      15 
   16: 000000000804925c 0000000000000000 SECTION LOCAL   DEFAULT      16 
   17: 000000000804a000 0000000000000000 SECTION LOCAL   DEFAULT      17 
   18: 000000000804a024 0000000000000000 SECTION LOCAL   DEFAULT      18 
   19: 000000000804a078 0000000000000000 SECTION LOCAL   DEFAULT      19 
   20: 000000000804bf0c 0000000000000000 SECTION LOCAL   DEFAULT      20 
   21: 000000000804bf10 0000000000000000 SECTION LOCAL   DEFAULT      21 
   22: 000000000804bf14 0000000000000000 SECTION LOCAL   DEFAULT      22 
   23: 000000000804bffc 0000000000000000 SECTION LOCAL   DEFAULT      23 
   24: 000000000804c000 0000000000000000 SECTION LOCAL   DEFAULT      24 
   25: 000000000804c014 0000000000000000 SECTION LOCAL   DEFAULT      25 
   26: 000000000804c01c 0000000000000000 SECTION LOCAL   DEFAULT      26 
   27: 0000000000000000 0000000000000000 SECTION LOCAL   DEFAULT      27 
   28: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS crtstuff.c
   29: 00000000080490e0 0000000000000000 FUNC    LOCAL   DEFAULT      15 deregister_tm_clones
   30: 0000000008049120 0000000000000000 FUNC    LOCAL   DEFAULT      15 register_tm_clones
   31: 0000000008049160 0000000000000000 FUNC    LOCAL   DEFAULT      15 __do_global_dtors_aux
   32: 000000000804c01c 0000000000000001 OBJECT  LOCAL   DEFAULT      26 completed.7622
   33: 000000000804bf10 0000000000000000 OBJECT  LOCAL   DEFAULT      21 __do_global_dtors_aux_fini_array_entry
   34: 0000000008049190 0000000000000000 FUNC    LOCAL   DEFAULT      15 frame_dummy
   35: 000000000804bf0c 0000000000000000 OBJECT  LOCAL   DEFAULT      20 __frame_dummy_init_array_entry
   36: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS hello.c
   37: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS crtstuff.c
   38: 000000000804a1ac 0000000000000000 OBJECT  LOCAL   DEFAULT      19 __FRAME_END__
   39: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS 
   40: 000000000804bf10 0000000000000000 NOTYPE  LOCAL   DEFAULT      20 __init_array_end
   41: 000000000804bf14 0000000000000000 OBJECT  LOCAL   DEFAULT      22 _DYNAMIC
   42: 000000000804bf0c 0000000000000000 NOTYPE  LOCAL   DEFAULT      20 __init_array_start
   43: 000000000804a024 0000000000000000 NOTYPE  LOCAL   DEFAULT      18 __GNU_EH_FRAME_HDR
   44: 000000000804c000 0000000000000000 OBJECT  LOCAL   DEFAULT      24 _GLOBAL_OFFSET_TABLE_
   45: 0000000008049250 0000000000000005 FUNC    GLOBAL  DEFAULT      15 __libc_csu_fini
   46: 00000000080490d0 0000000000000004 FUNC    GLOBAL  HIDDEN       15 __x86.get_pc_thunk.bx
   47: 000000000804c014 0000000000000000 NOTYPE  WEAK    DEFAULT      25 data_start
   48: 0000000008049255 0000000000000000 FUNC    GLOBAL  HIDDEN       15 __x86.get_pc_thunk.bp
   49: 000000000804c01c 0000000000000000 NOTYPE  GLOBAL  DEFAULT      25 _edata
   50: 000000000804925c 0000000000000000 FUNC    GLOBAL  HIDDEN       16 _fini
   51: 000000000804c014 0000000000000000 NOTYPE  GLOBAL  DEFAULT      25 __data_start
   52: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND puts@@GLIBC_2.0
   53: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND __gmon_start__
   54: 000000000804c018 0000000000000000 OBJECT  GLOBAL  HIDDEN       25 __dso_handle
   55: 000000000804a004 0000000000000004 OBJECT  GLOBAL  DEFAULT      17 _IO_stdin_used
   56: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND __libc_start_main@@GLIBC_2.0
   57: 00000000080491e0 0000000000000065 FUNC    GLOBAL  DEFAULT      15 __libc_csu_init
   58: 000000000804c020 0000000000000000 NOTYPE  GLOBAL  DEFAULT      26 _end
   59: 00000000080490c0 0000000000000005 FUNC    GLOBAL  HIDDEN       15 _dl_relocate_static_pie
   60: 0000000008049080 000000000000003b FUNC    GLOBAL  DEFAULT      15 _start
   61: 000000000804a000 0000000000000004 OBJECT  GLOBAL  DEFAULT      17 _fp_hw
   62: 000000000804c01c 0000000000000000 NOTYPE  GLOBAL  DEFAULT      26 __bss_start
   63: 0000000008049196 0000000000000040 FUNC    GLOBAL  DEFAULT      15 main
   64: 00000000080491d6 0000000000000000 FUNC    GLOBAL  HIDDEN       15 __x86.get_pc_thunk.ax
   65: 000000000804c01c 0000000000000000 OBJECT  GLOBAL  HIDDEN       25 __TMC_END__
   66: 0000000008049000 0000000000000000 FUNC    GLOBAL  HIDDEN       12 _init

Elf reloc headers:
Found reloc section .rel.dyn, relocs (1):

[ ID]   OFFSET             INFO         REL. TYPE          SYM. VALUE       Symbol Name
[  0] 000000000804bffc 0000000000000206 R_386_GLOB_DAT     0000000000000000 __gmon_start__

Found reloc section .rel.plt, relocs (2):

[ ID]   OFFSET             INFO         REL. TYPE          SYM. VALUE       Symbol Name
[  0] 000000000804c00c 0000000000000107 R_386_JMP_SLOT     0000000000000000 puts
[  1] 000000000804c010 0000000000000307 R_386_JMP_SLOT     0000000000000000 __libc_start_main


Elf Dynamic Program Header:
   ID:              TAG TAG STR                    Val/Ptr
    0: 0000000000000001 DT_NEEDED        0000000000000001 [Shared Lib: libc.so.6]
    1: 000000000000000c DT_INIT          0000000008049000
    2: 000000000000000d DT_FINI          000000000804925c
    3: 0000000000000019 DT_INIT_ARRAY    000000000804bf0c
    4: 000000000000001b DT_INIT_ARRAYSZ  0000000000000004
    5: 000000000000001a DT_FINI_ARRAY    000000000804bf10
    6: 000000000000001c DT_FINI_ARRAYSZ  0000000000000004
    7: 000000006ffffef5 DT_GNU_HASH      0000000008048228
    8: 0000000000000005 DT_STRTAB        0000000008048298
    9: 0000000000000006 DT_SYMTAB        0000000008048248
   10: 000000000000000a DT_STRSZ         000000000000004a
   11: 000000000000000b DT_SYMENT        0000000000000010
   12: 0000000000000015 DT_DEBUG         0000000000000000
   13: 0000000000000003 DT_PLTGOT        000000000804c000
   14: 0000000000000002 DT_PLTRELSZ      0000000000000010
   15: 0000000000000014 DT_PLTREL        0000000000000011
   16: 0000000000000017 DT_JMPREL        0000000008048314
   17: 0000000000000011 DT_REL           000000000804830c
   18: 0000000000000012 DT_RELSZ         0000000000000008
   19: 0000000000000013 DT_RELENT        0000000000000008
   20: 000000006ffffffe DT_VERNEED       00000000080482ec
   21: 000000006fffffff DT_VERNEEDNUM    0000000000000001
   22: 000000006ffffff0 DT_VERSYM        00000000080482e2
   23: 0000000000000000 DT_NULL          0000000000000000
   24: 0000000000000000 DT_NULL          0000000000000000
   25: 0000000000000000 DT_NULL          0000000000000000
   26: 0000000000000000 DT_NULL          0000000000000000
   27: 0000000000000000 DT_NULL          0000000000000000
   28: 0000000000000000 DT_NULL          0000000000000000

Elf binary imported libraries:
   ID: Name
    0: libc.so.6

Elf imported functions:
   ID: Name
    0: puts
    1: __libc_start_main
    2: puts@@GLIBC_2.0
    3: __libc_start_main@@GLIBC_2.0

