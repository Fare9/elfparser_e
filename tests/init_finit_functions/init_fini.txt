
Elf Header
Elf magic: 7f E L F 2 1 1 0 0 0 0 0 0 0 0 0 
ELF_CLASS:                              ELFCLASS64
ELF_DATA:                               ELFDATA2LSB (Two's complement, little-endian)
ELF_VERSION:                            EV_CURRENT
ELF_OSABI:                              ELFOSABI_SYSV
Elf ABI Version:                        0
Elf type:                               DYN (Shared object file)
Machine:                                AMD x86-64
Elf File Version:                       1 (Current)
Elf Program entry point:                0x10a0
Elf Program header Offset:              64 (raw offset bytes)
Elf Section header Offset:              14872 (raw offset bytes)
Elf processor flags:                    0
Elf header's size:                      64 (bytes)
Elf program header entry size:          56 (bytes)
Elf program header number of entries:   13
Elf section header's size:              64 (bytes)
Elf section header number of entries:   31
Elf section header string table index:  30

Elf Program Header:
TYPE            FLAGS            Offset            V.Addr
            P.Addr            F.Size            M.Size             Align

PHDR		R              0x0000000000000040 0x0000000000000040
	  0x0000000000000040 0x00000000000002d8 0x00000000000002d8 0x8

INTERP		R              0x0000000000000318 0x0000000000000318
	  0x0000000000000318 0x000000000000001c 0x000000000000001c 0x1
	[Program Interpreter: /lib64/ld-linux-x86-64.so.2]

LOAD		R              0x0000000000000000 0x0000000000000000
	  0x0000000000000000 0x00000000000006a0 0x00000000000006a0 0x1000	(DATA)

LOAD		R X            0x0000000000001000 0x0000000000001000
	  0x0000000000001000 0x0000000000000295 0x0000000000000295 0x1000	(TEXT)

LOAD		R              0x0000000000002000 0x0000000000002000
	  0x0000000000002000 0x0000000000000238 0x0000000000000238 0x1000	(DATA)

LOAD		RW             0x0000000000002d98 0x0000000000003d98
	  0x0000000000003d98 0x0000000000000278 0x0000000000000280 0x1000	(DATA)

DYNAMIC		RW             0x0000000000002db8 0x0000000000003db8
	  0x0000000000003db8 0x00000000000001f0 0x00000000000001f0 0x8

NOTE		R              0x0000000000000338 0x0000000000000338
	  0x0000000000000338 0x0000000000000020 0x0000000000000020 0x8

NOTE		R              0x0000000000000358 0x0000000000000358
	  0x0000000000000358 0x0000000000000044 0x0000000000000044 0x4

GNU_PROPERTY	R              0x0000000000000338 0x0000000000000338
	  0x0000000000000338 0x0000000000000020 0x0000000000000020 0x8

GNU_EH_FRAME	R              0x0000000000002098 0x0000000000002098
	  0x0000000000002098 0x0000000000000054 0x0000000000000054 0x4

GNU_STACK	RW             0x0000000000000000 0x0000000000000000
	  0x0000000000000000 0x0000000000000000 0x0000000000000000 0x10

GNU_RELRO	R              0x0000000000002d98 0x0000000000003d98
	  0x0000000000003d98 0x0000000000000268 0x0000000000000268 0x1

Mapping from section to segment: 
SEGMENT: SECTIONS
      0: 
      1: .interp 
      2: .interp .note.gnu.property .note.gnu.build-id .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt 
      3: .init .plt .plt.got .plt.sec .text .fini 
      4: .rodata .eh_frame_hdr .eh_frame 
      5: .init_array .fini_array .dynamic .got .data 
      6: .dynamic 
      7: .note.gnu.property 
      8: .note.gnu.build-id .note.ABI-tag 
      9: .note.gnu.property 
     10: .eh_frame_hdr 
     11: 
     12: .init_array .fini_array .dynamic .got 

Elf Section header:
[ID]    NAME              TYPE             FLAGS           ADDRESS            OFFSET
            SIZE              LINK              INFO         ADDRALIGN           ENTSIZE

[00]                   NULL              ---------------- 0000000000000000 0000000000000000 
       0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 

[01] .interp           PROGBITS          A--------------- 0000000000000318 0000000000000318 
       000000000000001c 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[02] .note.gnu.proper  NOTE              A--------------- 0000000000000338 0000000000000338 
       0000000000000020 0000000000000000 0000000000000000 0000000000000008 0000000000000000 

[03] .note.gnu.build-  NOTE              A--------------- 0000000000000358 0000000000000358 
       0000000000000024 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[04] .note.ABI-tag     NOTE              A--------------- 000000000000037c 000000000000037c 
       0000000000000020 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[05] .gnu.hash         GNU_HASH          A--------------- 00000000000003a0 00000000000003a0 
       0000000000000024 0000000000000006 0000000000000000 0000000000000008 0000000000000000 

[06] .dynsym           DYNSYM            A--------------- 00000000000003c8 00000000000003c8 
       00000000000000d8 0000000000000007 0000000000000001 0000000000000008 0000000000000018 

[07] .dynstr           STRTAB            A--------------- 00000000000004a0 00000000000004a0 
       0000000000000090 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[08] .gnu.version      VERSYM            A--------------- 0000000000000530 0000000000000530 
       0000000000000012 0000000000000006 0000000000000000 0000000000000002 0000000000000002 

[09] .gnu.version_r    VERNEED           A--------------- 0000000000000548 0000000000000548 
       0000000000000020 0000000000000007 0000000000000001 0000000000000008 0000000000000000 

[10] .rela.dyn         RELA              A--------------- 0000000000000568 0000000000000568 
       00000000000000f0 0000000000000006 0000000000000000 0000000000000008 0000000000000018 

[11] .rela.plt         RELA              AI-------------- 0000000000000658 0000000000000658 
       0000000000000048 0000000000000006 0000000000000018 0000000000000008 0000000000000018 

[12] .init             PROGBITS          AX-------------- 0000000000001000 0000000000001000 
       000000000000001b 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[13] .plt              PROGBITS          AX-------------- 0000000000001020 0000000000001020 
       0000000000000040 0000000000000000 0000000000000000 0000000000000010 0000000000000010 

[14] .plt.got          PROGBITS          AX-------------- 0000000000001060 0000000000001060 
       0000000000000010 0000000000000000 0000000000000000 0000000000000010 0000000000000010 

[15] .plt.sec          PROGBITS          AX-------------- 0000000000001070 0000000000001070 
       0000000000000030 0000000000000000 0000000000000000 0000000000000010 0000000000000010 

[16] .text             PROGBITS          AX-------------- 00000000000010a0 00000000000010a0 
       00000000000001e5 0000000000000000 0000000000000000 0000000000000010 0000000000000000 

[17] .fini             PROGBITS          AX-------------- 0000000000001288 0000000000001288 
       000000000000000d 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[18] .rodata           PROGBITS          A--------------- 0000000000002000 0000000000002000 
       0000000000000097 0000000000000000 0000000000000000 0000000000000008 0000000000000000 

[19] .eh_frame_hdr     PROGBITS          A--------------- 0000000000002098 0000000000002098 
       0000000000000054 0000000000000000 0000000000000000 0000000000000004 0000000000000000 

[20] .eh_frame         PROGBITS          A--------------- 00000000000020f0 00000000000020f0 
       0000000000000148 0000000000000000 0000000000000000 0000000000000008 0000000000000000 

[21] .init_array       INIT_ARRAY        WA-------------- 0000000000003d98 0000000000002d98 
       0000000000000010 0000000000000000 0000000000000000 0000000000000008 0000000000000008 

[22] .fini_array       FINI_ARRAY        WA-------------- 0000000000003da8 0000000000002da8 
       0000000000000010 0000000000000000 0000000000000000 0000000000000008 0000000000000008 

[23] .dynamic          DYNAMIC           WA-------------- 0000000000003db8 0000000000002db8 
       00000000000001f0 0000000000000007 0000000000000000 0000000000000008 0000000000000010 

[24] .got              PROGBITS          WA-------------- 0000000000003fa8 0000000000002fa8 
       0000000000000058 0000000000000000 0000000000000000 0000000000000008 0000000000000008 

[25] .data             PROGBITS          WA-------------- 0000000000004000 0000000000003000 
       0000000000000010 0000000000000000 0000000000000000 0000000000000008 0000000000000000 

[26] .bss              NOBITS            WA-------------- 0000000000004010 0000000000003010 
       0000000000000008 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[27] .comment          PROGBITS          MS-------------- 0000000000000000 0000000000003010 
       000000000000002a 0000000000000000 0000000000000000 0000000000000001 0000000000000001 

[28] .symtab           SYMTAB            ---------------- 0000000000000000 0000000000003040 
       0000000000000678 000000000000001d 0000000000000030 0000000000000008 0000000000000018 

[29] .strtab           STRTAB            ---------------- 0000000000000000 00000000000036b8 
       0000000000000241 0000000000000000 0000000000000000 0000000000000001 0000000000000000 

[30] .shstrtab         STRTAB            ---------------- 0000000000000000 00000000000038f9 
       000000000000011a 0000000000000000 0000000000000000 0000000000000001 0000000000000000 


Elf symbol headers:
Found .dynsym section symbols with 9 symbols
   ID:      Value            Size        TYPE    UNION   VIS     Section NAME
    0: 0000000000000000 0000000000000000 NOTYPE  LOCAL   DEFAULT     UND 
    1: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND _ITM_deregisterTMCloneTable
    2: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND puts
    3: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND strlen
    4: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND printf
    5: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND __libc_start_main
    6: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND __gmon_start__
    7: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND _ITM_registerTMCloneTable
    8: 0000000000000000 0000000000000000 FUNC    WEAK    DEFAULT     UND __cxa_finalize
Found .symtab section symbols with 69 symbols
   ID:      Value            Size        TYPE    UNION   VIS     Section NAME
    0: 0000000000000000 0000000000000000 NOTYPE  LOCAL   DEFAULT     UND 
    1: 0000000000000318 0000000000000000 SECTION LOCAL   DEFAULT       1 
    2: 0000000000000338 0000000000000000 SECTION LOCAL   DEFAULT       2 
    3: 0000000000000358 0000000000000000 SECTION LOCAL   DEFAULT       3 
    4: 000000000000037c 0000000000000000 SECTION LOCAL   DEFAULT       4 
    5: 00000000000003a0 0000000000000000 SECTION LOCAL   DEFAULT       5 
    6: 00000000000003c8 0000000000000000 SECTION LOCAL   DEFAULT       6 
    7: 00000000000004a0 0000000000000000 SECTION LOCAL   DEFAULT       7 
    8: 0000000000000530 0000000000000000 SECTION LOCAL   DEFAULT       8 
    9: 0000000000000548 0000000000000000 SECTION LOCAL   DEFAULT       9 
   10: 0000000000000568 0000000000000000 SECTION LOCAL   DEFAULT      10 
   11: 0000000000000658 0000000000000000 SECTION LOCAL   DEFAULT      11 
   12: 0000000000001000 0000000000000000 SECTION LOCAL   DEFAULT      12 
   13: 0000000000001020 0000000000000000 SECTION LOCAL   DEFAULT      13 
   14: 0000000000001060 0000000000000000 SECTION LOCAL   DEFAULT      14 
   15: 0000000000001070 0000000000000000 SECTION LOCAL   DEFAULT      15 
   16: 00000000000010a0 0000000000000000 SECTION LOCAL   DEFAULT      16 
   17: 0000000000001288 0000000000000000 SECTION LOCAL   DEFAULT      17 
   18: 0000000000002000 0000000000000000 SECTION LOCAL   DEFAULT      18 
   19: 0000000000002098 0000000000000000 SECTION LOCAL   DEFAULT      19 
   20: 00000000000020f0 0000000000000000 SECTION LOCAL   DEFAULT      20 
   21: 0000000000003d98 0000000000000000 SECTION LOCAL   DEFAULT      21 
   22: 0000000000003da8 0000000000000000 SECTION LOCAL   DEFAULT      22 
   23: 0000000000003db8 0000000000000000 SECTION LOCAL   DEFAULT      23 
   24: 0000000000003fa8 0000000000000000 SECTION LOCAL   DEFAULT      24 
   25: 0000000000004000 0000000000000000 SECTION LOCAL   DEFAULT      25 
   26: 0000000000004010 0000000000000000 SECTION LOCAL   DEFAULT      26 
   27: 0000000000000000 0000000000000000 SECTION LOCAL   DEFAULT      27 
   28: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS crtstuff.c
   29: 00000000000010d0 0000000000000000 FUNC    LOCAL   DEFAULT      16 deregister_tm_clones
   30: 0000000000001100 0000000000000000 FUNC    LOCAL   DEFAULT      16 register_tm_clones
   31: 0000000000001140 0000000000000000 FUNC    LOCAL   DEFAULT      16 __do_global_dtors_aux
   32: 0000000000004010 0000000000000001 OBJECT  LOCAL   DEFAULT      26 completed.8060
   33: 0000000000003da8 0000000000000000 OBJECT  LOCAL   DEFAULT      22 __do_global_dtors_aux_fini_array_entry
   34: 0000000000001180 0000000000000000 FUNC    LOCAL   DEFAULT      16 frame_dummy
   35: 0000000000003d98 0000000000000000 OBJECT  LOCAL   DEFAULT      21 __frame_dummy_init_array_entry
   36: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS init_fini.c
   37: 0000000000001189 0000000000000017 FUNC    LOCAL   DEFAULT      16 before_main
   38: 00000000000011a0 0000000000000017 FUNC    LOCAL   DEFAULT      16 after_main
   39: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS crtstuff.c
   40: 0000000000002234 0000000000000000 OBJECT  LOCAL   DEFAULT      20 __FRAME_END__
   41: 0000000000000000 0000000000000000 FILE    LOCAL   DEFAULT     ABS 
   42: 0000000000003da8 0000000000000000 NOTYPE  LOCAL   DEFAULT      21 __init_array_end
   43: 0000000000003db8 0000000000000000 OBJECT  LOCAL   DEFAULT      23 _DYNAMIC
   44: 0000000000003d98 0000000000000000 NOTYPE  LOCAL   DEFAULT      21 __init_array_start
   45: 0000000000002098 0000000000000000 NOTYPE  LOCAL   DEFAULT      19 __GNU_EH_FRAME_HDR
   46: 0000000000003fa8 0000000000000000 OBJECT  LOCAL   DEFAULT      24 _GLOBAL_OFFSET_TABLE_
   47: 0000000000001000 0000000000000000 FUNC    LOCAL   DEFAULT      12 _init
   48: 0000000000001280 0000000000000005 FUNC    GLOBAL  DEFAULT      16 __libc_csu_fini
   49: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND _ITM_deregisterTMCloneTable
   50: 0000000000004000 0000000000000000 NOTYPE  WEAK    DEFAULT      25 data_start
   51: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND puts@@GLIBC_2.2.5
   52: 0000000000004010 0000000000000000 NOTYPE  GLOBAL  DEFAULT      25 _edata
   53: 0000000000001288 0000000000000000 FUNC    GLOBAL  HIDDEN       17 _fini
   54: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND strlen@@GLIBC_2.2.5
   55: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND printf@@GLIBC_2.2.5
   56: 0000000000000000 0000000000000000 FUNC    GLOBAL  DEFAULT     UND __libc_start_main@@GLIBC_2.2.5
   57: 0000000000004000 0000000000000000 NOTYPE  GLOBAL  DEFAULT      25 __data_start
   58: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND __gmon_start__
   59: 0000000000004008 0000000000000000 OBJECT  GLOBAL  HIDDEN       25 __dso_handle
   60: 0000000000002000 0000000000000004 OBJECT  GLOBAL  DEFAULT      18 _IO_stdin_used
   61: 0000000000001210 0000000000000065 FUNC    GLOBAL  DEFAULT      16 __libc_csu_init
   62: 0000000000004018 0000000000000000 NOTYPE  GLOBAL  DEFAULT      26 _end
   63: 00000000000010a0 000000000000002f FUNC    GLOBAL  DEFAULT      16 _start
   64: 0000000000004010 0000000000000000 NOTYPE  GLOBAL  DEFAULT      26 __bss_start
   65: 00000000000011b7 000000000000004a FUNC    GLOBAL  DEFAULT      16 main
   66: 0000000000004010 0000000000000000 OBJECT  GLOBAL  HIDDEN       25 __TMC_END__
   67: 0000000000000000 0000000000000000 NOTYPE  WEAK    DEFAULT     UND _ITM_registerTMCloneTable
   68: 0000000000000000 0000000000000000 FUNC    WEAK    DEFAULT     UND __cxa_finalize@@GLIBC_2.2.5

Elf reloc headers:
Found reloc section .rela.dyn, relocs (10):

[ ID]   OFFSET             INFO           ADDEND         REL. TYPE          SYM. VALUE       Symbol Name
[  0] 0000000000003d98 0000000000000008 0000000000001180 R_X86_64_RELATIVE  0000000000000000
[  1] 0000000000003da0 0000000000000008 0000000000001189 R_X86_64_RELATIVE  0000000000000000
[  2] 0000000000003da8 0000000000000008 0000000000001140 R_X86_64_RELATIVE  0000000000000000
[  3] 0000000000003db0 0000000000000008 00000000000011a0 R_X86_64_RELATIVE  0000000000000000
[  4] 0000000000004008 0000000000000008 0000000000004008 R_X86_64_RELATIVE  0000000000000000
[  5] 0000000000003fd8 0000000000000006 0000000000000000 R_X86_64_GLOB_DAT  0000000000000000 _ITM_deregisterTMCloneTable
[  6] 0000000000003fe0 0000000000000006 0000000000000000 R_X86_64_GLOB_DAT  0000000000000000 __libc_start_main
[  7] 0000000000003fe8 0000000000000006 0000000000000000 R_X86_64_GLOB_DAT  0000000000000000 __gmon_start__
[  8] 0000000000003ff0 0000000000000006 0000000000000000 R_X86_64_GLOB_DAT  0000000000000000 _ITM_registerTMCloneTable
[  9] 0000000000003ff8 0000000000000006 0000000000000000 R_X86_64_GLOB_DAT  0000000000000000 __cxa_finalize

Found reloc section .rela.plt, relocs (3):

[ ID]   OFFSET             INFO           ADDEND         REL. TYPE          SYM. VALUE       Symbol Name
[  0] 0000000000003fc0 0000000000000007 0000000000000000 R_X86_64_JUMP_SLOT 0000000000000000 puts
[  1] 0000000000003fc8 0000000000000007 0000000000000000 R_X86_64_JUMP_SLOT 0000000000000000 strlen
[  2] 0000000000003fd0 0000000000000007 0000000000000000 R_X86_64_JUMP_SLOT 0000000000000000 printf


Elf Dynamic Program Header:
   ID:              TAG TAG STR                    Val/Ptr
    0: 0000000000000001 DT_NEEDED        0000000000000001 [Shared Lib: libc.so.6]
    1: 000000000000000c DT_INIT          0000000000001000
    2: 000000000000000d DT_FINI          0000000000001288
    3: 0000000000000019 DT_INIT_ARRAY    0000000000003d98
    4: 000000000000001b DT_INIT_ARRAYSZ  0000000000000010
    5: 000000000000001a DT_FINI_ARRAY    0000000000003da8
    6: 000000000000001c DT_FINI_ARRAYSZ  0000000000000010
    7: 000000006ffffef5 DT_GNU_HASH      00000000000003a0
    8: 0000000000000005 DT_STRTAB        00000000000004a0
    9: 0000000000000006 DT_SYMTAB        00000000000003c8
   10: 000000000000000a DT_STRSZ         0000000000000090
   11: 000000000000000b DT_SYMENT        0000000000000018
   12: 0000000000000015 DT_DEBUG         0000000000000000
   13: 0000000000000003 DT_PLTGOT        0000000000003fa8
   14: 0000000000000002 DT_PLTRELSZ      0000000000000048
   15: 0000000000000014 DT_PLTREL        0000000000000007
   16: 0000000000000017 DT_JMPREL        0000000000000658
   17: 0000000000000007 DT_RELA          0000000000000568
   18: 0000000000000008 DT_RELASZ        00000000000000f0
   19: 0000000000000009 DT_RELAENT       0000000000000018
   20: 000000000000001e DT_FLAGS         0000000000000008
   21: 000000006ffffffb DT_FLAGS_1       0000000008000001
   22: 000000006ffffffe DT_VERNEED       0000000000000548
   23: 000000006fffffff DT_VERNEEDNUM    0000000000000001
   24: 000000006ffffff0 DT_VERSYM        0000000000000530
   25: 000000006ffffff9 DT_RELACOUNT     0000000000000005
   26: 0000000000000000 DT_NULL          0000000000000000
   27: 0000000000000000 DT_NULL          0000000000000000
   28: 0000000000000000 DT_NULL          0000000000000000
   29: 0000000000000000 DT_NULL          0000000000000000
   30: 0000000000000000 DT_NULL          0000000000000000

Elf binary imported libraries:
   ID: Name
    0: libc.so.6

Elf imported functions:
   ID: Name
    0: puts
    1: strlen
    2: printf
    3: __libc_start_main
    4: __cxa_finalize
    5: puts@@GLIBC_2.2.5
    6: strlen@@GLIBC_2.2.5
    7: printf@@GLIBC_2.2.5
    8: __libc_start_main@@GLIBC_2.2.5
    9: __cxa_finalize@@GLIBC_2.2.5

